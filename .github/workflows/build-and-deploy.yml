name: Build and Deploy

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw

    - name: Run Java tests
      run: ./mvnw test

  deploy-lambda:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: eu-west-1

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Make Maven wrapper executable
      run: chmod +x ./mvnw

    - name: Build Lambda functions
      run: ./mvnw clean package -DskipTests

    - name: Deploy Lambda functions
      run: |
        aws lambda update-function-code --function-name converter-to-roman --zip-file fileb://target/converter-0.0.1-SNAPSHOT.jar
        aws lambda update-function-code --function-name converter-to-arabic --zip-file fileb://target/converter-0.0.1-SNAPSHOT.jar

  deploy-frontend:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: eu-west-1

    - name: Read API URL from S3
      id: api_url
      run: |
        aws s3 cp s3://p11h-converter-frontend-config/api-url.txt ./api-url.txt
        echo "API_URL=$(cat api-url.txt)" >> $GITHUB_ENV

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build frontend
      run: |
        echo "VITE_API_URL=${{ env.API_URL }}" > .env.production
        npm run build

    - name: Deploy to S3
      run: aws s3 sync dist/ s3://p11h-converter --delete

    - name: Invalidate CloudFront cache
      run: |
        DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[0].Id" --output text)
        aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*" 